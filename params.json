{"name":"Php CSV Parser","tagline":"A simple PHP csv parser inspired by the Adaltas nodejs csv project","body":"### Requirements\r\n\r\n+ PHP 5.3 (it uses some PHP 5.3 specific functions like str_getcsv(...))\r\n\r\n### WARNING\r\n\r\nThis class has not been fully tested to ensure it works as it should -- (it's a work in progress) ;-)\r\n\r\n#### UPDATE\r\n\r\nIt has now been tested on small data sets...Still remains to be seen how it performs on large data sets :)\r\n\r\n### Examples\r\n\r\n```php\r\n    include(\"../src/Emmanix2002/PhpCSVParser.php\");\r\n\r\n    use Emmanix2002\\PhpCSV\\PhpCSVParser;\r\n\r\n    $csv_parser = new PhpCSVParser();\r\n    if($csv_parser){\r\n        var_dump(\r\n            $csv_parser->fromPath(__DIR__.'/csv_1.csv')\r\n                    ->parse()\r\n                    ->to(__DIR__.'/csv_created_by_to_path.csv')\r\n        );\r\n    }\r\n```\r\n```php\r\n    include(\"../src/Emmanix2002/PhpCSVParser.php\");\r\n\r\n    use Emmanix2002\\PhpCSV\\PhpCSVParser;\r\n\r\n    $csv_parser = new PhpCSVParser();\r\n    $csv_parser_2 = new PhpCSVParser();\r\n    $csv_parser_3 = new PhpCSVParser();\r\n    if ($csv_parser)\r\n    {\r\n        var_dump(\r\n            $csv_parser->fromString(\r\n                            '#Welcome\\n\"1\",\"2\",\"3\",\"4\"\\n\"a\",\"b\",\"c\",\"d\"',\r\n                            array(\"rowDelimiter\"=>'\\n')\r\n                        )\r\n                    ->parse()\r\n                    ->to('array')\r\n        );\r\n    }\r\n    if ($csv_parser_2)\r\n    {\r\n        var_dump($csv_parser_2->fromString('#Welcome\\n\"1\",\"2\",\"3\",\"4\"\\n\"a\",\"b\",\"c\",\"d\"',array(\"rowDelimiter\"=>\"\\\\n\"))\r\n                    ->parse()\r\n                    ->to(\"string\"));\r\n    }\r\n    if ($csv_parser_3)\r\n    {\r\n        var_dump($csv_parser_3->fromString('#Welcome\\n\"1\",\"2\",\"3\",\"4\"\\n\"a\",\"b\",\"c\",\"d\"',array(\"rowDelimiter\"=>\"\\\\n\"))\r\n                    ->parse()\r\n                    ->to(\"to_callback\"));\r\n    }\r\n    function to_callback(array $rows){\r\n        foreach($rows as $row){\r\n            echo implode(\" | \", $row).\"<br />\";\r\n        }\r\n    }\r\n```\r\n```php\r\n    include(\"../src/Emmanix2002/PhpCSVParser.php\");\r\n\r\n    use Emmanix2002\\PhpCSV\\PhpCSVParser;\r\n    use Emmanix2002\\PhpCSV\\Enum\\PhpCSVParserEventType;\r\n    use Emmanix2002\\PhpCSV\\Exception\\PhpCSVParserException;\r\n\r\n    $csv_parser = new PhpCSVParser();\r\n    if ($csv_parser)\r\n    {\r\n        $csv_parser->fromString('#Welcome\\n\"1\",\"2\",\"3\",\"4\"\\n\"a\",\"b\",\"c\",\"d\"',array(\"rowDelimiter\"=>'\\n'));\r\n        $csv_parser->on(PhpCSVParserEventType::EVENT_ON_RECORD, \"on_record\")\r\n                    ->on(PhpCSVParserEventType::EVENT_ON_ERROR, \"on_error\")\r\n                    ->on(PhpCSVParserEventType::EVENT_ON_CLOSE, \"on_close\")\r\n                    ->on(PhpCSVParserEventType::EVENT_ON_END, \"on_end\")\r\n                    ->on(PhpCSVParserEventType::EVENT_ON_DATA, \"on_data\")\r\n                    ->parse()\r\n                    ->transform(\"transform_callback\");\r\n        var_dump($csv_parser->to(\"array\"));\r\n    }\r\n\r\n    function on_record(array $row, $index){\r\n        echo \"On Record fired: \".implode(\" . \", $row).\" @ index $index<br />\";\r\n    }\r\n    function on_error(PhpCSVParserException $exception){\r\n        echo \"On Error fired: \".$exception->getFullMessage().\"<br />\";\r\n    }\r\n    function on_close($count){\r\n        echo \"On Close fired: Successfully wrote $count records to the file<br />\";\r\n    }\r\n    function on_end($count){\r\n        echo \"On End fired: Done processing $count records :)<br />\";\r\n    }\r\n    function on_data($row, $index){\r\n        echo \"On Data fired: \".implode(\" . \", $row).\" @ index $index<br />\";\r\n    }\r\n    function to_callback(array $rows){\r\n        foreach($rows as $row){\r\n            echo implode(\" | \", $row).\"<br />\";\r\n        }\r\n    }\r\n    function transform_callback($parsed_row, $index){\r\n        $parsed_row[] = array_sum($parsed_row);\r\n        return $parsed_row;\r\n    }\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}